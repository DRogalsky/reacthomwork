{"version":3,"sources":["components/header/index.js","components/Navbar/index.js","components/Footer/index.js","components/Card/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","Navbar","props","className","score","topScore","Footer","Card","onClick","event","alt","name","src","image","App","state","friends","guessed","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleClick","friendName","target","currentScore","_this","guessedList","includes","restart","setState","concat","Object","toConsumableArray","this","_this2","map","friendObj","components_Card","key","id","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"ulFAGe,SAASA,IACpB,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,sDCJG,SAASC,EAAOC,GAC3B,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,SAAd,gBACAL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,gBAAd,2BACAL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,SAAd,UAA8BD,EAAME,MAApC,eAAuDF,EAAMG,kBCN9D,SAASC,IACpB,OACIR,EAAAC,EAAAC,cAAA,qBCSOO,MAXf,SAAcL,GAEZ,OACEJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OAAOK,QAAS,SAACC,GAAD,OAAWP,EAAMM,QAAQC,KACtDX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,OAAKU,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,kBC0E1BC,6MA1EbC,MAAQ,CACNC,UACAC,QAAS,GACTb,MAAO,EACPC,SAAU,KAGZa,QAAU,SAACC,GAIT,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,KAGTQ,YAAc,SAAAlB,GACZ,IAAMmB,EAAanB,EAAMoB,OAAOnB,IAC5BoB,EAAeC,EAAKhB,MAAMX,MAAQ,EAChC4B,EAAcD,EAAKhB,MAAME,QAE3Be,EAAYC,SAASL,GACvBG,EAAKG,UAELH,EAAKI,SAAS,CACZnB,QAASe,EAAKb,QAAQa,EAAKhB,MAAMC,SACjCZ,MAAO0B,EACPb,QAAO,GAAAmB,OAAAC,OAAAC,EAAA,EAAAD,CAAML,GAAN,CAAmBJ,gFAM3BW,KAAKxB,MAAMX,MAAQmC,KAAKxB,MAAMV,UAC/BkC,KAAKJ,SAAS,CACZ9B,SAAUkC,KAAKxB,MAAMX,QAGzBmC,KAAKJ,SAAS,CACZ/B,MAAO,EACPa,QAAS,sCAIJ,IAAAuB,EAAAD,KACP,OACEzC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACC,EAAD,CAAQG,MAAOmC,KAAKxB,MAAMX,MAAOC,SAAUkC,KAAKxB,MAAMV,WACtDP,EAAAC,EAAAC,cAACH,EAAD,MACC0C,KAAKxB,MAAMC,QAAQyB,IAAI,SAAAC,GACtB,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,CACLC,IAAKF,EAAUG,GACfA,GAAIH,EAAUG,GACdlC,KAAM+B,EAAU/B,KAChBE,MAAO6B,EAAU7B,MACjBL,QAASgC,EAAKb,gBAGlB7B,EAAAC,EAAAC,cAACM,EAAD,cArEUwC,aCHlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8f1453dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <h1>Memory Game!</h1>\r\n            <h2>Try to click each image only once</h2>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li className='title'>Memory Game!</li>\r\n                <li className='instructions'>Click an image to begin</li>\r\n                <li className='score'>Score: {props.score} Top Score: {props.topScore}</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n        </footer>\r\n    )\r\n}\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n\n  return (\n    <div className=\"card\" onClick={(event) => props.onClick(event)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n\n// props = {\n//     id: 1,\n//     name: \"SpongeBob\",\n//     image: \"https://vignette.wikia.nocookie.net/spongebobgalaxy/images/0/07/SpongeBob_SquarePants.png/revision/latest?cb=20171228024014\",\n//     job: \"Fry Cook\",\n//     place: \"A Pineapple Under the Sea\"\n// }\n","import React, { Component } from 'react';\nimport Header from './components/header';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Card from './components/Card';\nimport friends from './friends.json';\n\nclass App extends Component {\n  state = {\n    friends,\n    guessed: [],\n    score: 0,\n    topScore: 0\n  };\n\n  shuffle = (array) => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  };\n\n  handleClick = event => {\n    const friendName = event.target.alt;\n    let currentScore = this.state.score + 1;\n    const guessedList = this.state.guessed;\n\n    if (guessedList.includes(friendName)) {\n      this.restart()\n    } else {\n      this.setState({\n        friends: this.shuffle(this.state.friends),\n        score: currentScore,\n        guessed: [...guessedList, friendName]\n      })\n    }\n  };\n\n  restart() {\n    if(this.state.score > this.state.topScore) {\n      this.setState({\n        topScore: this.state.score\n      })\n    }\n    this.setState({\n      score: 0,\n      guessed: []\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        <Header />\n        {this.state.friends.map(friendObj => {\n          return <Card\n            key={friendObj.id}\n            id={friendObj.id}\n            name={friendObj.name}\n            image={friendObj.image}\n            onClick={this.handleClick}\n          />\n        })}\n        <Footer />\n      </div>\n    )\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}